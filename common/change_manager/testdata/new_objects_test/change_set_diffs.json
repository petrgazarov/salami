[
  {
    "OldObject": null,
    "NewObject": {
      "SourceFilePath": "path/to/source_file",
      "ParsedVariable": {
        "Name": "container port",
        "Description": "Container port",
        "Type": "string",
        "Default": "8080",
        "SourceFilePath": "path/to/source_file",
        "SourceFileLine": 15
      },
      "CodeSegments": [
        {
          "SegmentType": "Variable",
          "Content": "variable \"container_port\" {\n description = \"Container port\" \n type = string \n default = \"8080\" \n}"
        }
      ]
    }
  },
  {
    "OldObject": null,
    "NewObject": {
      "SourceFilePath": "path/to/source_file",
      "ParsedResource": {
        "ResourceType": "aws.logs.LogGroup",
        "LogicalName": "LogsGroup",
        "NaturalLanguage": "Log group: /ecs/my-app\nRetention: 30 days",
        "Uses": [],
        "Exports": {},
        "ReferencedVariables": [],
        "SourceFilePath": "path/to/source_file",
        "SourceFileLine": 1
      },
      "CodeSegments": [
        {
          "SegmentType": "Resource",
          "Content": "resource \"aws_cloudwatch_log_group\" \"LogsGroup\" {\n  name = \"/ecs/my-app\" \n  retention_in_days = 30 \n}"
        }
      ]
    }
  },
  {
    "OldObject": {
      "SourceFilePath": "path/to/source_file",
      "ParsedResource": {
        "ResourceType": "aws.s3.BucketPublicAccessBlock",
        "LogicalName": "AssetsPublicAccessBlock",
        "NaturalLanguage": "Block public ACLs: True\nBlock public policy: False\nIgnore public ACLs: True\nRestrict public buckets: False",
        "Uses": ["AssumedRolesBucket"],
        "Exports": {},
        "ReferencedVariables": [],
        "SourceFilePath": "path/to/source_file",
        "SourceFileLine": 0
      },
      "CodeSegments": [
        {
          "SegmentType": "Resource",
          "Content": "resource \"aws_s3_bucket_public_access_block\" \"AssetsPublicAccessBlock\" {\n  bucket = aws_s3_bucket.AssumedRolesBucket.id\n\n  block_public_acls       = true\n  block_public_policy     = false\n  ignore_public_acls      = true\n  restrict_public_buckets = false\n}"
        }
      ]
    },
    "NewObject": null
  },
  {
    "OldObject": {
      "SourceFilePath": "path/to/source_file",
      "ParsedResource": {
        "ResourceType": "aws.s3.BucketPolicy",
        "LogicalName": "AssumedRolesBucketPolicy",
        "NaturalLanguage": "Policy: A JSON policy that allows all principals to perform the \"s3:GetObject\" action on all objects in the specified S3 bucket.",
        "Uses": ["AssumedRolesBucket"],
        "Exports": {},
        "ReferencedVariables": [],
        "SourceFilePath": "path/to/source_file",
        "SourceFileLine": 0
      },
      "CodeSegments": [
        {
          "SegmentType": "Resource",
          "Content": "resource \"aws_s3_bucket_policy\" \"AssumedRolesBucketPolicy\" {\n  bucket = aws_s3_bucket.AssumedRolesBucket.id\n\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action   = \"s3:GetObject\"\n        Effect   = \"Allow\"\n        Resource = \"${aws_s3_bucket.AssumedRolesBucket.arn}/*\"\n        Principal = \"*\"\n      }\n    ]\n  })\n}"
        }
      ]
    },
    "NewObject": {
      "SourceFilePath": "path/to/source_file",
      "ParsedResource": {
        "ResourceType": "aws.s3.BucketPolicy",
        "LogicalName": "AssumedRolesBucketPolicy",
        "NaturalLanguage": "Policy: A JSON policy that denies everyone access",
        "Uses": ["AssumedRolesBucket"],
        "Exports": {},
        "ReferencedVariables": [],
        "SourceFilePath": "path/to/source_file",
        "SourceFileLine": 0
      },
      "CodeSegments": [
        {
          "SegmentType": "Resource",
          "Content": "resource \"aws_s3_bucket_policy\" \"AssumedRolesBucketPolicy\" {\n  bucket = aws_s3_bucket.AssumedRolesBucket.bucket \n  policy = jsonencode({\n    Version: \"2012-10-17\",\n    Statement: [{\n      Effect: \"Deny\",\n      Principal: \"*\",\n      Action: \"s3:*\",\n      Resource: \"arn:aws:s3:::${aws_s3_bucket.AssumedRolesBucket.bucket}/*\"\n    }]\n  })\n}"
        }
      ]
    }
  }
]