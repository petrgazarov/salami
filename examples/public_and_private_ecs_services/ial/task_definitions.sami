@resource(aws.iam.Role, ServerTaskRole)
name: server-task-role
Assume role policy allows the "ecs-tasks.amazonaws.com" service to assume this role

@resource(aws.iam.Role, ServerAssumeRolePolicy)
Name: server-assume-role-policy
Description: A policy that allows the ECS task to assume a role in users' accounts
Policy allows the "sts:AssumeRole" action on resources matching the pattern "arn:aws:iam::*:role/salami-assumed-role-v0.1-*"

@resource(aws.iam.RolePolicyAttachment, ServerTaskRolePolicyAttachment)
Attaches $ServerAssumeRolePolicy to $ServerTaskRole

@resource(aws.ecs.TaskDefinition, ServerTaskDefinition)
Family: server
Cpu: 256, Memory: 512
Network mode: awsvpc
Task role: $ServerTaskRole
Requires FARGATE compatibility
Execution role: $ServerEcsExecutionRole
Container definition:
  Name: {server_container_name}
  Image: $ServerRepository url with the "latest" tag
  Memory: 512
  Cpu: 256
  Essential: True
  Port mappings:
    Container port is {container_port}. Protocol is TCP. No host port is set.
  Environment:
    OPENAI_API_KEY: ${openai_api_key}
    ASSUMED_ROLE_SECRET_TOKEN: ${assumed_role_secret_token}
    PYTHON_EXEC_URL: {python_exec_local_service_name}.{local_dns_namespace_name}:{container_port}.
  Log configuration: awslogs log driver, $ServerLogGroup log group name, and {aws_region} AWS region. The stream prefix is set to "ecs".

@resource(aws.ecs.TaskDefinition, PythonExecTaskDefinition)
Family: python-exec
Cpu: 256, Memory: 512
Network mode: awsvpc
Requires FARGATE compatibility
Execution role: $PythonExecEcsExecutionRole
Container definition:
  Name: {python_exec_container_name}
  Image: $PythonExecRepository url with the "latest" tag
  Memory: 512
  Cpu: 256
  Essential: True
  Port mappings: Container port is {container_port}. Protocol is TCP. No host port is set.
  Log configuration: awslogs log driver, $PythonExecLogGroup log group name, and {aws_region} AWS region. The stream prefix is set to ecs.